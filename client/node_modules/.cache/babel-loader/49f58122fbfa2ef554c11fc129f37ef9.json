{"ast":null,"code":"var _jsxFileName = \"/home/vishnu/proj/ADI/Complete React/twitch_tv/client/src/components/streams/StreamShow.jsx\";\nimport React from 'react';\nimport flv from 'flv.js';\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../actions/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StreamShow extends React.Component {\n  constructor() {\n    super();\n\n    this.buildPlayer = () => {\n      const {\n        id\n      } = this.props.match.params;\n\n      if (this.player || !this.props.stream) {\n        return;\n      }\n\n      this.player = flv.createPlayer({\n        type: 'flv',\n        url: `http://localhost:8000/live/${id}`\n      });\n      this.player.attachMediaElement(this.videoRef.current);\n      this.player.load();\n    };\n\n    this.videoRef = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    const {\n      id\n    } = this.props.match.params;\n    this.props.fetchStream(id);\n  }\n\n  render() {\n    if (!this.props.stream) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 20\n      }, this);\n    }\n\n    const {\n      title,\n      description\n    } = this.props.stream;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: this.videoRef,\n        style: {\n          width: '100%'\n        },\n        controls: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream\n})(StreamShow);","map":{"version":3,"sources":["/home/vishnu/proj/ADI/Complete React/twitch_tv/client/src/components/streams/StreamShow.jsx"],"names":["React","flv","connect","fetchStream","StreamShow","Component","constructor","buildPlayer","id","props","match","params","player","stream","createPlayer","type","url","attachMediaElement","videoRef","current","load","createRef","componentDidMount","render","title","description","width","mapStateToProps","state","ownProps","streams"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,qBAA5B;;;AAEA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;AAErCC,EAAAA,WAAW,GAAG;AACV;;AADU,SAWdC,WAXc,GAWA,MAAM;AAChB,YAAM;AAAEC,QAAAA;AAAF,UAAS,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAhC;;AACA,UAAI,KAAKC,MAAL,IAAe,CAAC,KAAKH,KAAL,CAAWI,MAA/B,EAAuC;AACnC;AACH;;AACD,WAAKD,MAAL,GAAcX,GAAG,CAACa,YAAJ,CAAiB;AAC3BC,QAAAA,IAAI,EAAE,KADqB;AAE3BC,QAAAA,GAAG,EAAG,8BAA6BR,EAAG;AAFX,OAAjB,CAAd;AAIA,WAAKI,MAAL,CAAYK,kBAAZ,CAA+B,KAAKC,QAAL,CAAcC,OAA7C;AACA,WAAKP,MAAL,CAAYQ,IAAZ;AACH,KAtBa;;AAEV,SAAKF,QAAL,gBAAgBlB,KAAK,CAACqB,SAAN,EAAhB;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEd,MAAAA;AAAF,QAAS,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAhC;AACA,SAAKF,KAAL,CAAWN,WAAX,CAAuBK,EAAvB;AAEH;;AAeDe,EAAAA,MAAM,GAAG;AACL,QAAI,CAAC,KAAKd,KAAL,CAAWI,MAAhB,EAAwB;AACpB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AAED,UAAM;AAAEW,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAyB,KAAKhB,KAAL,CAAWI,MAA1C;AACA,wBACI;AAAA,8BAEI;AAAO,QAAA,GAAG,EAAE,KAAKK,QAAjB;AAA2B,QAAA,KAAK,EAAE;AAAEQ,UAAAA,KAAK,EAAE;AAAT,SAAlC;AAAqD,QAAA,QAAQ;AAA7D;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,kBAAKF;AAAL;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA,kBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AAxCoC;;AA2CzC,MAAME,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC,SAAO;AAAEhB,IAAAA,MAAM,EAAEe,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACnB,KAAT,CAAeC,MAAf,CAAsBH,EAApC;AAAV,GAAP;AACH,CAFD;;AAIA,eAAeN,OAAO,CAClByB,eADkB,EAElB;AAAExB,EAAAA;AAAF,CAFkB,CAAP,CAGbC,UAHa,CAAf","sourcesContent":["import React from 'react';\nimport flv from 'flv.js';\nimport { connect } from 'react-redux'\nimport { fetchStream } from '../../actions/index';\n\nclass StreamShow extends React.Component {\n\n    constructor() {\n        super();\n        this.videoRef = React.createRef();\n    }\n\n    componentDidMount() {\n        const { id } = this.props.match.params;\n        this.props.fetchStream(id);\n\n    };\n\n    buildPlayer = () => {\n        const { id } = this.props.match.params;\n        if (this.player || !this.props.stream) {\n            return;\n        }\n        this.player = flv.createPlayer({\n            type: 'flv',\n            url: `http://localhost:8000/live/${id}`\n        });\n        this.player.attachMediaElement(this.videoRef.current);\n        this.player.load();\n    }\n\n    render() {\n        if (!this.props.stream) {\n            return <div>Loading...</div>\n        }\n\n        const { title, description } = this.props.stream;\n        return (\n            <div>\n\n                <video ref={this.videoRef} style={{ width: '100%' }} controls />\n                <h1>{title}</h1>\n                <h5>{description}</h5>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return { stream: state.streams[ownProps.match.params.id] }\n}\n\nexport default connect(\n    mapStateToProps,\n    { fetchStream }\n)(StreamShow);"]},"metadata":{},"sourceType":"module"}