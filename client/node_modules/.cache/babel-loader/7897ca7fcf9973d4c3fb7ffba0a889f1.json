{"ast":null,"code":"var _jsxFileName = \"/home/vishnu/proj/ADI/Complete React/twitch_tv/client/src/components/GoogleAuth.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { SignIn, SignOut } from '../actions/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass GoogleAuth extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.onAuthChange = isSignedIn => {\n      if (isSignedIn) {\n        this.props.SignIn(this.auth.currentUser.get().getId());\n      } else {\n        this.props.SignOut();\n      }\n    };\n\n    this.onSignInClick = () => {\n      this.auth.signIn();\n    };\n\n    this.onSignOutClick = () => {\n      this.auth.signOut();\n    };\n  }\n\n  componentDidMount() {\n    window.gapi.load('client:auth2', () => {\n      window.gapi.client.init({\n        clientId: '622155317378-qas2cmni5h62kg3c4hfq70c1lrr6cd3u.apps.googleusercontent.com',\n        scope: 'email'\n      }).then(() => {\n        this.auth = window.gapi.auth2.getAuthInstance();\n        this.onAuthChange(this.auth.isSignedIn.get());\n        this.auth.isSignedIn.listen(this.onAuthChange);\n      });\n    });\n  }\n\n  renderAuthButton() {\n    if (this.props.isSignedIn === null) {\n      return null;\n    } else if (this.props.isSignedIn) {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui red google button\",\n        onClick: this.onSignOutClick,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"google icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), \"Sign Out\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui red google button\",\n        onClick: this.onSignInClick,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"google icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), \"Sign In with Google\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.renderAuthButton()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  //console.log(state);\n  return {\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  SignIn,\n  SignOut\n})(GoogleAuth);","map":{"version":3,"sources":["/home/vishnu/proj/ADI/Complete React/twitch_tv/client/src/components/GoogleAuth.js"],"names":["React","Component","connect","SignIn","SignOut","GoogleAuth","onAuthChange","isSignedIn","props","auth","currentUser","get","getId","onSignInClick","signIn","onSignOutClick","signOut","componentDidMount","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","renderAuthButton","render","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,kBAAhC;;;AAEA,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SAe/BK,YAf+B,GAefC,UAAD,IAAgB;AAC3B,UAAIA,UAAJ,EAAgB;AACZ,aAAKC,KAAL,CAAWL,MAAX,CAAkB,KAAKM,IAAL,CAAUC,WAAV,CAAsBC,GAAtB,GAA4BC,KAA5B,EAAlB;AACH,OAFD,MAEO;AACH,aAAKJ,KAAL,CAAWJ,OAAX;AACH;AACJ,KArB8B;;AAAA,SAuB/BS,aAvB+B,GAuBf,MAAM;AAClB,WAAKJ,IAAL,CAAUK,MAAV;AACH,KAzB8B;;AAAA,SA2B/BC,cA3B+B,GA2Bd,MAAM;AACnB,WAAKN,IAAL,CAAUO,OAAV;AACH,KA7B8B;AAAA;;AAE/BC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiB,cAAjB,EAAiC,MAAM;AACnCF,MAAAA,MAAM,CAACC,IAAP,CAAYE,MAAZ,CAAmBC,IAAnB,CAAwB;AACpBC,QAAAA,QAAQ,EAAE,0EADU;AAEpBC,QAAAA,KAAK,EAAE;AAFa,OAAxB,EAGGC,IAHH,CAGQ,MAAM;AACV,aAAKhB,IAAL,GAAYS,MAAM,CAACC,IAAP,CAAYO,KAAZ,CAAkBC,eAAlB,EAAZ;AACA,aAAKrB,YAAL,CAAkB,KAAKG,IAAL,CAAUF,UAAV,CAAqBI,GAArB,EAAlB;AACA,aAAKF,IAAL,CAAUF,UAAV,CAAqBqB,MAArB,CAA4B,KAAKtB,YAAjC;AACH,OAPD;AAQH,KATD;AAUH;;AAkBDuB,EAAAA,gBAAgB,GAAG;AACf,QAAI,KAAKrB,KAAL,CAAWD,UAAX,KAA0B,IAA9B,EAAoC;AAChC,aAAO,IAAP;AACH,KAFD,MAEO,IAAI,KAAKC,KAAL,CAAWD,UAAf,EAA2B;AAC9B,0BACI;AAAQ,QAAA,SAAS,EAAC,sBAAlB;AAAyC,QAAA,OAAO,EAAE,KAAKQ,cAAvD;AAAA,gCACI;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAMH,KAPM,MAOA;AACH,0BACI;AAAQ,QAAA,SAAS,EAAC,sBAAlB;AAAyC,QAAA,OAAO,EAAE,KAAKF,aAAvD;AAAA,gCACI;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAMH;AACJ;;AAEDiB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,gBACK,KAAKD,gBAAL;AADL;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAzD8B;;AA0DlC;;AAED,MAAME,eAAe,GAAIC,KAAD,IAAW;AAC/B;AACA,SAAO;AAAEzB,IAAAA,UAAU,EAAEyB,KAAK,CAACvB,IAAN,CAAWF;AAAzB,GAAP;AACH,CAHD;;AAKA,eAAeL,OAAO,CAAC6B,eAAD,EAAkB;AAAE5B,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAlB,CAAP,CAA8CC,UAA9C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { SignIn, SignOut } from '../actions/index';\n\nclass GoogleAuth extends Component {\n\n    componentDidMount() {\n        window.gapi.load('client:auth2', () => {\n            window.gapi.client.init({\n                clientId: '622155317378-qas2cmni5h62kg3c4hfq70c1lrr6cd3u.apps.googleusercontent.com',\n                scope: 'email'\n            }).then(() => {\n                this.auth = window.gapi.auth2.getAuthInstance();\n                this.onAuthChange(this.auth.isSignedIn.get());\n                this.auth.isSignedIn.listen(this.onAuthChange);\n            });\n        });\n    };\n\n    onAuthChange = (isSignedIn) => {\n        if (isSignedIn) {\n            this.props.SignIn(this.auth.currentUser.get().getId());\n        } else {\n            this.props.SignOut();\n        }\n    };\n\n    onSignInClick = () => {\n        this.auth.signIn();\n    };\n\n    onSignOutClick = () => {\n        this.auth.signOut();\n    };\n\n    renderAuthButton() {\n        if (this.props.isSignedIn === null) {\n            return null;\n        } else if (this.props.isSignedIn) {\n            return (\n                <button className='ui red google button' onClick={this.onSignOutClick}>\n                    <i className='google icon'></i>\n                    Sign Out\n                </button>\n            )\n        } else {\n            return (\n                <button className='ui red google button' onClick={this.onSignInClick}>\n                    <i className='google icon'></i>\n                    Sign In with Google\n                </button>\n            )\n        }\n    };\n\n    render() {\n        return (\n            <div>\n                {this.renderAuthButton()}\n            </div>\n        );\n    };\n};\n\nconst mapStateToProps = (state) => {\n    //console.log(state);\n    return { isSignedIn: state.auth.isSignedIn }\n}\n\nexport default connect(mapStateToProps, { SignIn, SignOut })(GoogleAuth);"]},"metadata":{},"sourceType":"module"}