{"ast":null,"code":"var _jsxFileName = \"/home/vishnu/proj/ADI/Complete React/twitch_tv/client/src/components/streams/StreamList.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../../actions/index';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StreamList extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.renderAdmin = stream => {\n      console.log(stream.userId, this.props.currentUserId, '');\n\n      if (stream.userId === this.props.currentUserId) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right floated content\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ui button primary\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ui button negative\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 17\n        }, this);\n      }\n\n      ;\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchStreams();\n  }\n\n  renderCreate() {\n    if (this.props.isSignedIn) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/streams/new\",\n          className: \"ui button primary\",\n          children: \"Create Stream\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this);\n    }\n\n    ;\n  }\n\n  renderList() {\n    return this.props.streams.map(stream => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item\",\n        children: [this.renderAdmin(stream), /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"large middle aligned icon camera\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [stream.title, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"description\",\n            children: stream.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)]\n      }, stream.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Streams \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui celled list\",\n        children: [\" \", this.renderList()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\n\nconst mapStateToProps = state => {\n  return {\n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId,\n    isSignedIn: state.auth.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams\n})(StreamList);","map":{"version":3,"sources":["/home/vishnu/proj/ADI/Complete React/twitch_tv/client/src/components/streams/StreamList.jsx"],"names":["React","Component","connect","fetchStreams","Link","StreamList","renderAdmin","stream","console","log","userId","props","currentUserId","componentDidMount","renderCreate","isSignedIn","textAlign","renderList","streams","map","title","description","id","render","mapStateToProps","state","Object","values","auth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAGA,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SAM/BK,WAN+B,GAMhBC,MAAD,IAAY;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,MAAnB,EAA2B,KAAKC,KAAL,CAAWC,aAAtC,EAAqD,EAArD;;AACA,UAAIL,MAAM,CAACG,MAAP,KAAkB,KAAKC,KAAL,CAAWC,aAAjC,EAAgD;AAC5C,4BACI;AAAK,UAAA,SAAS,EAAC,uBAAf;AAAA,kCACI;AAAQ,YAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAQ,YAAA,SAAS,EAAC,oBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ;AAMH;;AAAA;AACJ,KAhB8B;AAAA;;AAE/BC,EAAAA,iBAAiB,GAAG;AAChB,SAAKF,KAAL,CAAWR,YAAX;AACH;;AAcDW,EAAAA,YAAY,GAAG;AACX,QAAI,KAAKH,KAAL,CAAWI,UAAf,EAA2B;AACvB,0BACI;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAZ;AAAA,+BACI,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,cAAT;AAAwB,UAAA,SAAS,EAAC,mBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH;;AAAA;AACJ;;AAEDC,EAAAA,UAAU,GAAG;AACT,WAAO,KAAKN,KAAL,CAAWO,OAAX,CAAmBC,GAAnB,CAAuBZ,MAAM,IAAI;AACpC,0BACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,mBACK,KAAKD,WAAL,CAAiBC,MAAjB,CADL,eAEI;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,qBACKA,MAAM,CAACa,KADZ,eAEI;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,sBAA8Bb,MAAM,CAACc;AAArC;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA,SAA2Bd,MAAM,CAACe,EAAlC;AAAA;AAAA;AAAA;AAAA,cADJ;AAUH,KAXM,CAAP;AAYH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,wBAAkC,KAAKN,UAAL,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAlD8B;;AAmDlC;;AAED,MAAMO,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHP,IAAAA,OAAO,EAAEQ,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACP,OAApB,CADN;AAEHN,IAAAA,aAAa,EAAEa,KAAK,CAACG,IAAN,CAAWlB,MAFvB;AAGHK,IAAAA,UAAU,EAAEU,KAAK,CAACG,IAAN,CAAWb;AAHpB,GAAP;AAKH,CAND;;AAQA,eAAeb,OAAO,CAACsB,eAAD,EAAkB;AAAErB,EAAAA;AAAF,CAAlB,CAAP,CAA2CE,UAA3C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../../actions/index';\nimport { Link } from 'react-router-dom';\n\n\nclass StreamList extends Component {\n\n    componentDidMount() {\n        this.props.fetchStreams();\n    };\n\n    renderAdmin = (stream) => {\n        console.log(stream.userId, this.props.currentUserId, '')\n        if (stream.userId === this.props.currentUserId) {\n            return (\n                <div className='right floated content'>\n                    <button className='ui button primary'>Edit</button>\n                    <button className='ui button negative'>Delete</button>\n                </div>\n            );\n        };\n    };\n\n    renderCreate() {\n        if (this.props.isSignedIn) {\n            return (\n                <div style={{ textAlign: \"\" }}>\n                    <Link to=\"/streams/new\" className='ui button primary' >Create Stream</Link>\n                </div>\n            );\n        };\n    };\n\n    renderList() {\n        return this.props.streams.map(stream => {\n            return (\n                <div className='item' key={stream.id}>\n                    {this.renderAdmin(stream)}\n                    <i className='large middle aligned icon camera' />\n                    <div className='content'>\n                        {stream.title}\n                        <div className='description'>{stream.description}</div>\n                    </div>\n                </div>\n            );\n        });\n    };\n\n    render() {\n        return (\n            <div>\n                <h2>Streams </h2>\n                <div className='ui celled list'> {this.renderList()}</div>\n            </div>\n        );\n    };\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        streams: Object.values(state.streams),\n        currentUserId: state.auth.userId,\n        isSignedIn: state.auth.isSignedIn,\n    };\n}\n\nexport default connect(mapStateToProps, { fetchStreams })(StreamList);"]},"metadata":{},"sourceType":"module"}