{"ast":null,"code":"import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../actions/index';\n\nclass StreamEdit extends Component {\n  componentDidMount() {\n    console.log(this.props.match.params.id);\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    if (!this.props.stream) {}\n\n    console.log(this.props.stream);\n    return;\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream\n})(StreamEdit);","map":{"version":3,"sources":["/home/vishnu/proj/ADI/Complete React/twitch_tv/client/src/components/streams/StreamEdit.jsx"],"names":["React","Component","connect","fetchStream","StreamEdit","componentDidMount","console","log","props","match","params","id","render","stream","mapStateToProps","state","ownProps","streams"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,qBAA5B;;AAGA,MAAMC,UAAN,SAAyBH,SAAzB,CAAmC;AAE/BI,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAApC;AACA,SAAKH,KAAL,CAAWL,WAAX,CAAuB,KAAKK,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAI,CAAC,KAAKJ,KAAL,CAAWK,MAAhB,EAAwB,CAEvB;;AACDP,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWK,MAAvB;AACA;AAGH;;AAf8B;;AAkBnC,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC,SAAO;AAAEH,IAAAA,MAAM,EAAEE,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACP,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAV,GAAP;AACH,CAFD;;AAIA,eAAeT,OAAO,CAClBY,eADkB,EAElB;AAAEX,EAAAA;AAAF,CAFkB,CAAP,CAGbC,UAHa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../actions/index';\n\n\nclass StreamEdit extends Component {\n\n    componentDidMount() {\n        console.log(this.props.match.params.id)\n        this.props.fetchStream(this.props.match.params.id);\n    };\n\n    render() {\n        if (!this.props.stream) {\n\n        }\n        console.log(this.props.stream)\n        return\n\n\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return { stream: state.streams[ownProps.match.params.id] }\n};\n\nexport default connect(\n    mapStateToProps,\n    { fetchStream }\n)(StreamEdit);"]},"metadata":{},"sourceType":"module"}