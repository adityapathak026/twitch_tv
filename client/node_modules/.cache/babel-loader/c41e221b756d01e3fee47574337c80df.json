{"ast":null,"code":"var _jsxFileName = \"/home/vishnu/proj/ADI/Complete React/twitch_tv/client/src/components/streams/StreamShow.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../actions/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass StreamShow extends React.Component {\n  componentDidMount() {\n    this.props.fetchStream(this.props.match.params.id);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"StreamShow\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    stream: state.streams\n  };\n};\n\nexport default connect(null, {\n  fetchStream\n})(StreamShow);","map":{"version":3,"sources":["/home/vishnu/proj/ADI/Complete React/twitch_tv/client/src/components/streams/StreamShow.jsx"],"names":["React","connect","fetchStream","StreamShow","Component","componentDidMount","props","match","params","id","render","mapStateToProps","state","stream","streams"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,qBAA5B;;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AAErCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWJ,WAAX,CAAuB,KAAKI,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH;;AAVoC;;AAazC,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AAAEC,IAAAA,MAAM,EAAED,KAAK,CAACE;AAAhB,GAAP;AACH,CAFD;;AAIA,eAAeb,OAAO,CAClB,IADkB,EAElB;AAAEC,EAAAA;AAAF,CAFkB,CAAP,CAGbC,UAHa,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux'\nimport { fetchStream } from '../../actions/index';\n\nclass StreamShow extends React.Component {\n\n    componentDidMount() {\n        this.props.fetchStream(this.props.match.params.id)\n    }\n\n    render() {\n        return (\n            <div>StreamShow</div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return { stream: state.streams }\n}\n\nexport default connect(\n    null,\n    { fetchStream }\n)(StreamShow);"]},"metadata":{},"sourceType":"module"}